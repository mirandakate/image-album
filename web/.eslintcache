[{"C:\\ImageAlbum\\web\\src\\index.tsx":"1","C:\\ImageAlbum\\web\\src\\reportWebVitals.ts":"2","C:\\ImageAlbum\\web\\src\\common\\hooks\\useRequest.ts":"3","C:\\ImageAlbum\\web\\src\\App.tsx":"4","C:\\ImageAlbum\\web\\src\\components\\index.tsx":"5","C:\\ImageAlbum\\web\\src\\components\\Nav\\index.tsx":"6","C:\\ImageAlbum\\web\\src\\components\\Thumbnail\\index.tsx":"7","C:\\ImageAlbum\\web\\src\\components\\Modals\\UploadModal.tsx":"8","C:\\ImageAlbum\\web\\src\\components\\FileUpload\\index.tsx":"9"},{"size":589,"mtime":1612000054764,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611984135279,"results":"12","hashOfConfig":"11"},{"size":1255,"mtime":1612001007109,"results":"13","hashOfConfig":"11"},{"size":4815,"mtime":1612000957741,"results":"14","hashOfConfig":"11"},{"size":124,"mtime":1611999852649,"results":"15","hashOfConfig":"11"},{"size":316,"mtime":1612001187618,"results":"16","hashOfConfig":"11"},{"size":669,"mtime":1611998414676,"results":"17","hashOfConfig":"11"},{"size":2144,"mtime":1612000521155,"results":"18","hashOfConfig":"11"},{"size":652,"mtime":1612001174869,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1d83sie",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\ImageAlbum\\web\\src\\index.tsx",[],["43","44"],"C:\\ImageAlbum\\web\\src\\reportWebVitals.ts",[],"C:\\ImageAlbum\\web\\src\\common\\hooks\\useRequest.ts",[],"C:\\ImageAlbum\\web\\src\\App.tsx",["45"],"import React, { useState, useEffect, useRef } from 'react';\nimport './App.scss';\nimport { Nav, Thumbnail, UploadModal } from '../src/components';\nimport { useRequest } from './common/hooks/useRequest';\nimport { DeleteOutlined, CloudUploadOutlined } from '@ant-design/icons';\n\nfunction App() {\n\tconst totalItemLoad = useRef(0);\n\tconst [preview, setPreview] = useState<any>();\n\tconst [selected, setSelected] = useState<any>([]);\n\tconst [itemList, setItemList] = useState<any>([]);\n\tconst [skip, setSkip] = useState<number>(0);\n\tconst [limit, setLimit] = useState<number>(25);\n\tconst [showUploadModal, setShowUploadModal] = useState<boolean>(false);\n\n\tconst uploadRequest = useRequest('/photos', { method: 'PUT' });\n\tconst imageListRequest = useRequest('/photos/list', { method: 'POST' });\n\tconst deletePhotosRequest = useRequest('/photos', { method: 'DELETE' });\n\n\tuseEffect(() => {\n\t\timageListRequest\n\t\t\t.call({\n\t\t\t\tdata: { skip, limit },\n\t\t\t})\n\t\t\t.then((response: any) => {\n\t\t\t\ttotalItemLoad.current += response?.data?.documents?.length;\n\t\t\t});\n\t}, [skip, limit]);\n\n\tuseEffect(() => {\n\t\tif (imageListRequest?.value?.documents) {\n\t\t\tsetItemList((prev: any) => {\n\t\t\t\treturn [...prev, ...imageListRequest?.value?.documents];\n\t\t\t});\n\t\t}\n\t}, [imageListRequest?.value?.documents]);\n\n\tconst handleSubmit = (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tuploadRequest.call({ data: new FormData(event.target as any) });\n\t\tsetShowUploadModal(false);\n\t};\n\n\tconst handleDelete = (event: any) => {\n\t\tconst listOnId = itemList.reduce((result: any, item: any) => {\n\t\t\tresult[item.id] = item;\n\t\t\treturn result;\n\t\t}, {});\n\n\t\tconst albums = selected.reduce((result: any, id: string) => {\n\t\t\tif (!result.includes(listOnId[id].album)) {\n\t\t\t\tresult.push(listOnId[id].album);\n\t\t\t}\n\t\t\treturn result;\n\t\t}, []);\n\n\t\tconst data = albums.map((album: string) => {\n\t\t\tconst documents = selected\n\t\t\t\t.filter((id: string) => {\n\t\t\t\t\treturn listOnId[id].album === album;\n\t\t\t\t})\n\t\t\t\t.map((id: string) => {\n\t\t\t\t\treturn listOnId[id].name;\n\t\t\t\t})\n\t\t\t\t.join(', ');\n\t\t\treturn { album, documents };\n\t\t});\n\n\t\tdeletePhotosRequest.call({ data: data });\n\t\tsetItemList((prev: any) => {\n\t\t\treturn prev.filter((item: any) => !selected.includes(item.id));\n\t\t});\n\t\tsetSelected([]);\n\t};\n\n\tconst itemExceeded = totalItemLoad.current < skip + limit;\n\n\treturn (\n\t\t<div className='image-album'>\n\t\t\t<Nav title='Photos'>\n\t\t\t\t<div>\n\t\t\t\t\t{selected.length > 0 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<button onClick={handleDelete}>\n\t\t\t\t\t\t\t\t<DeleteOutlined />{' '}\n\t\t\t\t\t\t\t\t{`Delete ${selected.length} photo${\n\t\t\t\t\t\t\t\t\t(selected.length > 1 && 's') || ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t</button>{' '}\n\t\t\t\t\t\t\t<span className='divider'>|</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='link'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetShowUploadModal(true);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<CloudUploadOutlined /> Upload\n\t\t\t\t\t</button>\n\t\t\t\t\t<span className='divider'>|</span>\n\t\t\t\t\t{showUploadModal && (\n\t\t\t\t\t\t<UploadModal\n\t\t\t\t\t\t\tshow={showUploadModal}\n\t\t\t\t\t\t\tpreview={preview}\n\t\t\t\t\t\t\tsetPreview={setPreview}\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t\tonCancel={() => {\n\t\t\t\t\t\t\t\tsetShowUploadModal(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<select\n\t\t\t\t\t\tname='pageNumber'\n\t\t\t\t\t\tdisabled={itemExceeded}\n\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\tsetLimit(parseInt(e.target.value));\n\t\t\t\t\t\t\tsetSkip((prev: number) => prev + limit);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trequired>\n\t\t\t\t\t\t<option value='5'>5</option>\n\t\t\t\t\t\t<option value='10'>10</option>\n\t\t\t\t\t\t<option value='25' selected>\n\t\t\t\t\t\t\t25\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value='50'>50</option>\n\t\t\t\t\t\t<option value='100'>100</option>\n\t\t\t\t\t\t<option value='250'>250</option>\n\t\t\t\t\t\t<option value='500'>500</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</Nav>\n\t\t\t<div className='content'>\n\t\t\t\t<div className={`image-list ${selected.length > 0 ? 'on-select' : ''}`}>\n\t\t\t\t\t{/* {imageListRequest?.loading && (\n\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>Loading...</div>\n\t\t\t\t\t)} */}\n\t\t\t\t\t{itemList?.map((item: any) => (\n\t\t\t\t\t\t<Thumbnail\n\t\t\t\t\t\t\tsrc={item.raw}\n\t\t\t\t\t\t\tfileName={item.name}\n\t\t\t\t\t\t\talbumName={item.album}\n\t\t\t\t\t\t\tselected={selected.includes(item.id)}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetSelected((prev: any) => {\n\t\t\t\t\t\t\t\t\tconst found = prev.includes(item.id);\n\t\t\t\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\t\t\t\treturn prev.filter((each: any) => each !== item.id);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn [...prev, item.id];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{!itemExceeded && (\n\t\t\t\t\t<div className='load-more'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='link'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetSkip((prev: number) => prev + limit);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled={itemExceeded}>\n\t\t\t\t\t\t\tLoad More\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","C:\\ImageAlbum\\web\\src\\components\\index.tsx",[],"C:\\ImageAlbum\\web\\src\\components\\Nav\\index.tsx",[],"C:\\ImageAlbum\\web\\src\\components\\Thumbnail\\index.tsx",["46"],"import React, { FunctionComponent } from 'react';\r\nimport './Thumbnail.scss';\r\n\r\ninterface ThumbnailProps {\r\n\tsrc: string;\r\n\tfileName: string;\r\n\talbumName: string;\r\n\tselected: boolean;\r\n\tonClick?: () => void;\r\n}\r\n\r\nexport const Thumbnail: FunctionComponent<ThumbnailProps> = ({\r\n\tsrc,\r\n\tfileName,\r\n\talbumName,\r\n\tselected,\r\n\tonClick,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={`item ${selected ? 'selected' : ''}`}>\r\n\t\t\t{selected && <input type='checkbox' checked={selected} />}\r\n\t\t\t<div className='image-container' onClick={onClick}>\r\n\t\t\t\t<img src={src} />\r\n\t\t\t</div>\r\n\t\t\t<p className='file-name'>{fileName}</p>\r\n\t\t\t<p className='album'>{albumName}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","C:\\ImageAlbum\\web\\src\\components\\Modals\\UploadModal.tsx",["47"],"import React, { FunctionComponent, useState } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { FileUpload } from '../index';\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\nimport './UploadModal.scss';\r\n\r\ninterface UploadModalProps {\r\n\tshow: boolean;\r\n\tonSubmit?: (event: any) => void;\r\n\tonCancel?: (event: any) => void;\r\n\tpreview: any;\r\n\tsetPreview: any;\r\n}\r\n\r\nexport const UploadModal: FunctionComponent<UploadModalProps> = ({\r\n\tshow,\r\n\tonSubmit,\r\n\tonCancel,\r\n\tpreview,\r\n\tsetPreview,\r\n}) => {\r\n\tconst [selectedAlbum, setSelectedAlbum] = useState<any>();\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tclassName='upload-modal'\r\n\t\t\ttitle='Upload photos'\r\n\t\t\tvisible={show}\r\n\t\t\tonCancel={onCancel}\r\n\t\t\tfooter={null}\r\n\t\t\twidth={720}>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<FileUpload\r\n\t\t\t\t\tname='documents'\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tsetPreview(\r\n\t\t\t\t\t\t\tArray.from(event.target.files as any).map((each) => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tname: (each as any).name,\r\n\t\t\t\t\t\t\t\t\tsize: (each as any).size,\r\n\t\t\t\t\t\t\t\t\tsrc: window.URL.createObjectURL(each),\r\n\t\t\t\t\t\t\t\t\ttype: (each as any).type,\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<aside>\r\n\t\t\t\t\t{preview ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h4>Files</h4>\r\n\t\t\t\t\t\t\t<div className='preview-list'>\r\n\t\t\t\t\t\t\t\t{preview.map((value: any) => (\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={value.src}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100px', height: '100px' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<h3>No files selected...</h3>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</aside>\r\n\r\n\t\t\t\t<div className='modal-footer'>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tname='album'\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tsetSelectedAlbum(e.target.value);\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<option selected disabled>\r\n\t\t\t\t\t\t\tSelect album\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value='Travel'>Travel</option>\r\n\t\t\t\t\t\t<option value='Personal'>Personal</option>\r\n\t\t\t\t\t\t<option value='Food'>Food</option>\r\n\t\t\t\t\t\t<option value='Nature'>Nature</option>\r\n\t\t\t\t\t\t<option value='Other'>Other</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<button type='submit' disabled={!(selectedAlbum && preview)}>\r\n\t\t\t\t\t\t<CloudUploadOutlined /> Upload\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n","C:\\ImageAlbum\\web\\src\\components\\FileUpload\\index.tsx",["48","49"],"import React, { FunctionComponent, useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\ninterface FileUploadProps {\r\n\tname: string;\r\n\tonChange?: (event: any) => void;\r\n\tsetAcceptedFileCount?: any;\r\n}\r\n\r\nexport const FileUpload: FunctionComponent<FileUploadProps> = ({\r\n\tname,\r\n\tonChange,\r\n\tsetAcceptedFileCount,\r\n}) => {\r\n\tconst {\r\n\t\tacceptedFiles,\r\n\t\tfileRejections,\r\n\t\tgetRootProps,\r\n\t\tgetInputProps,\r\n\t} = useDropzone({\r\n\t\taccept: 'image/*',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAcceptedFileCount(acceptedFiles.length as any);\r\n\t}, [acceptedFiles]);\r\n\r\n\tconst acceptedFileItems = acceptedFiles.map((file: any) => (\r\n\t\t<li key={file.path}>\r\n\t\t\t{file.path} - {file.size} bytes\r\n\t\t</li>\r\n\t));\r\n\r\n\tconst fileRejectionItems = fileRejections.map(({ file, errors }: any) => (\r\n\t\t<li key={file.path}>\r\n\t\t\t{file.path} - {file.size} bytes\r\n\t\t\t<ul>\r\n\t\t\t\t{errors.map((e: any) => (\r\n\t\t\t\t\t<li key={e.code}>{e.message}</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</li>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<section className='container'>\r\n\t\t\t<div {...getRootProps({ className: 'dropzone' })}>\r\n\t\t\t\t<input name={name} {...getInputProps()} onChange={onChange} />\r\n\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n\t\t\t</div>\r\n\t\t\t<aside>\r\n\t\t\t\t{acceptedFileItems.length === 0 && <h3>No files selected...</h3>}\r\n\t\t\t\t<h4>Accepted files</h4>\r\n\t\t\t\t<ul>{acceptedFileItems}</ul>\r\n\t\t\t\t{/* <h4>Rejected files</h4>\r\n\t\t\t\t<ul>{fileRejectionItems}</ul> */}\r\n\t\t\t</aside>\r\n\t\t</section>\r\n\t);\r\n};\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":28,"column":5,"nodeType":"56","endLine":28,"endColumn":18,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":23,"column":5,"nodeType":"60","endLine":23,"endColumn":22},{"ruleId":"58","severity":1,"message":"59","line":53,"column":10,"nodeType":"60","endLine":56,"endColumn":12},{"ruleId":"54","severity":1,"message":"61","line":26,"column":5,"nodeType":"56","endLine":26,"endColumn":20,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":34,"column":8,"nodeType":"65","messageId":"66","endLine":34,"endColumn":26},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imageListRequest'. Either include it or remove the dependency array.","ArrayExpression",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setAcceptedFileCount'. Either include it or remove the dependency array. If 'setAcceptedFileCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["70"],"@typescript-eslint/no-unused-vars","'fileRejectionItems' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [skip, limit, imageListRequest]",{"range":"75","text":"76"},"Update the dependencies array to be: [acceptedFiles, setAcceptedFileCount]",{"range":"77","text":"78"},[1049,1062],"[skip, limit, imageListRequest]",[555,570],"[acceptedFiles, setAcceptedFileCount]"]